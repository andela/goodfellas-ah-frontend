// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components ProfileEdit containe Error should render as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditProfile
    editProfile={[Function]}
    fetchProfile={[Function]}
    profileNavigation={[MockFunction]}
    profileStore={
      Object {
        "profile": Object {},
        "profileError": "An error occoured",
        "profileView": "Favorites",
      }
    }
    user={
      Object {
        "userId": 1,
      }
    }
    value="Ade"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <svg
          className="icon"
        >
          <use
            xlinkHref="icons.svg#sad"
          />
        </svg>
          
        <span>
          An error occoured
        </span>
      </div>,
      "className": "no-record centralizer",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <svg
            className="icon"
          >
            <use
              xlinkHref="icons.svg#sad"
            />
          </svg>,
          "  ",
          <span>
            An error occoured
          </span>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <use
              xlinkHref="icons.svg#sad"
            />,
            "className": "icon",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "xlinkHref": "icons.svg#sad",
            },
            "ref": null,
            "rendered": null,
            "type": "use",
          },
          "type": "svg",
        },
        "  ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "An error occoured",
          },
          "ref": null,
          "rendered": "An error occoured",
          "type": "span",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <svg
            className="icon"
          >
            <use
              xlinkHref="icons.svg#sad"
            />
          </svg>
            
          <span>
            An error occoured
          </span>
        </div>,
        "className": "no-record centralizer",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <svg
              className="icon"
            >
              <use
                xlinkHref="icons.svg#sad"
              />
            </svg>,
            "  ",
            <span>
              An error occoured
            </span>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <use
                xlinkHref="icons.svg#sad"
              />,
              "className": "icon",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "xlinkHref": "icons.svg#sad",
              },
              "ref": null,
              "rendered": null,
              "type": "use",
            },
            "type": "svg",
          },
          "  ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "An error occoured",
            },
            "ref": null,
            "rendered": "An error occoured",
            "type": "span",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`components ProfileEdit container Loading should render as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditProfile
    editProfile={[Function]}
    fetchProfile={[Function]}
    profileNavigation={[MockFunction]}
    profileStore={
      Object {
        "profile": Object {},
        "profileView": "Favorites",
      }
    }
    user={
      Object {
        "userId": 1,
      }
    }
    value="Ade"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`components ProfileEdit container should render as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditProfile
    editProfile={[Function]}
    fetchProfile={[Function]}
    history={
      Object {
        "push": [MockFunction],
      }
    }
    profileNavigation={[MockFunction]}
    profileStore={
      Object {
        "articles": Array [
          Object {
            "authorId": 1,
            "averageRating": null,
            "body": "This is the fine long body this is the fine long body  this is the fine long body  this is the fine long body  this is the fine long body ",
            "comments": Array [],
            "createdAt": "2018-11-09T15:08:00.560Z",
            "description": " this is the fine long body  this is the fine long body ",
            "favorited": null,
            "favoritesCount": null,
            "id": 2,
            "image": null,
            "reactions": Array [],
            "read_time": "1 minute",
            "slug": "this-is-a-fine-title-which-i-would-really-love-to-have",
            "tagList": null,
            "title": "This is a fine title which I would really love to have",
            "updatedAt": "2018-11-09T15:08:00.560Z",
            "user": Object {
              "email": "damafeez11@gmail.com",
              "firstname": "Afeez1",
              "lastname": "Awoyemi",
              "notificationSettings": Array [
                "email",
                "inApp",
              ],
              "role": "User",
            },
          },
        ],
        "favorites": Array [
          Object {
            "article": Object {
              "archived": false,
              "authorId": 13,
              "averageRating": null,
              "body": "This is the fine long body this is the fine long body  this is the fine long body  this is the fine long body  this is the fine long body ",
              "comments": Array [],
              "createdAt": "2018-11-22T12:57:56.989Z",
              "description": " this is the fine long body  this is the fine long body ",
              "favorited": null,
              "favoritesCount": null,
              "id": 2,
              "image": null,
              "published": true,
              "reactions": Array [],
              "read_time": "1 minute",
              "slug": "this-is-a-fine-title-which-i-would-really-love-to-have-1",
              "tagList": null,
              "title": "This is a fine title which I would really love to have",
              "updatedAt": "2018-11-22T12:57:56.989Z",
              "user": Object {
                "firstname": "Anthony",
                "isFollowed": null,
                "isFollowing": null,
                "lastname": "Ugwu",
                "profile": Object {
                  "image": null,
                },
              },
            },
            "article_slug": "this-is-a-fine-title-which-i-would-really-love-to-have-1",
            "createdAt": "2018-11-22T12:59:16.439Z",
            "id": 1,
            "updatedAt": "2018-11-22T12:59:16.439Z",
            "user_id": 1,
          },
        ],
        "followers": Array [
          Object {
            "createdAt": "2018-11-11T23:42:00.689Z",
            "follower": Object {
              "email": "damafeez@gmail.com",
              "firstname": "Afeez",
              "lastname": "Awoyemi",
              "profile": Object {
                "bio": null,
                "createdAt": "2018-11-10T14:06:28.897Z",
                "following": false,
                "id": 3,
                "image": null,
                "updatedAt": "2018-11-10T14:06:28.897Z",
                "userId": 3,
                "username": null,
              },
              "role": "User",
            },
            "followerId": 3,
            "id": 1,
            "updatedAt": "2018-11-11T23:42:00.689Z",
          },
        ],
        "following": Array [],
        "profile": Object {
          "bio": "here's my bio which I love",
          "createdAt": "2018-11-09T10:50:57.187Z",
          "following": false,
          "id": 1,
          "image": "https://res.cloudinary.com/drmmqcxkc/image/upload/v1541770998/siue0ec27gazjujncvch.jpg",
          "updatedAt": "2018-11-09T13:43:58.950Z",
          "userId": 1,
          "username": "akangbe",
        },
        "profileError": "",
        "user": Object {
          "email": "damafeez11@gmail.com",
          "firstname": "Afeez1",
          "lastname": "Awoyemi",
          "notificationSettings": Array [
            "email",
            "inApp",
          ],
          "role": "User",
        },
      }
    }
    user={
      Object {
        "userId": 1,
      }
    }
    value="Ade"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <form
          className="edit-profile_form"
          encType="multipart/form-data"
          onSubmit={[Function]}
        >
          <ProfileImageUploader
            canReset={false}
            imageRead={[Function]}
            name="image"
            profileImage="https://res.cloudinary.com/drmmqcxkc/image/upload/v1541770998/siue0ec27gazjujncvch.jpg"
            resetImage={[Function]}
          />
          <h3
            className="username"
            id="user-name"
          >
            Afeez1 Awoyemi
          </h3>
          <_default
            handleChange={[Function]}
            name="username"
            placeholder="Username"
            value="akangbe"
          />
          <_default
            handleChange={[Function]}
            name="bio"
            placeholder="Enter a short bio"
            value="here's my bio which I love"
          />
          <div>
            <button
              className="button green outline"
              disabled={true}
              id="save-button"
              type="submit"
            >
              Save
            </button>
            <button
              className="button green outline"
              disabled={false}
              onClick={[Function]}
              type="button"
            >
              Cancel
            </button>
          </div>
        </form>,
        <Connect(NotificationSettings) />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ProfileImageUploader
              canReset={false}
              imageRead={[Function]}
              name="image"
              profileImage="https://res.cloudinary.com/drmmqcxkc/image/upload/v1541770998/siue0ec27gazjujncvch.jpg"
              resetImage={[Function]}
            />,
            <h3
              className="username"
              id="user-name"
            >
              Afeez1 Awoyemi
            </h3>,
            <_default
              handleChange={[Function]}
              name="username"
              placeholder="Username"
              value="akangbe"
            />,
            <_default
              handleChange={[Function]}
              name="bio"
              placeholder="Enter a short bio"
              value="here's my bio which I love"
            />,
            <div>
              <button
                className="button green outline"
                disabled={true}
                id="save-button"
                type="submit"
              >
                Save
              </button>
              <button
                className="button green outline"
                disabled={false}
                onClick={[Function]}
                type="button"
              >
                Cancel
              </button>
            </div>,
          ],
          "className": "edit-profile_form",
          "encType": "multipart/form-data",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "canReset": false,
              "imageRead": [Function],
              "name": "image",
              "profileImage": "https://res.cloudinary.com/drmmqcxkc/image/upload/v1541770998/siue0ec27gazjujncvch.jpg",
              "resetImage": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Afeez1 Awoyemi",
              "className": "username",
              "id": "user-name",
            },
            "ref": null,
            "rendered": "Afeez1 Awoyemi",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "handleChange": [Function],
              "name": "username",
              "placeholder": "Username",
              "value": "akangbe",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "handleChange": [Function],
              "name": "bio",
              "placeholder": "Enter a short bio",
              "value": "here's my bio which I love",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  className="button green outline"
                  disabled={true}
                  id="save-button"
                  type="submit"
                >
                  Save
                </button>,
                <button
                  className="button green outline"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  Cancel
                </button>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Save",
                  "className": "button green outline",
                  "disabled": true,
                  "id": "save-button",
                  "type": "submit",
                },
                "ref": null,
                "rendered": "Save",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Cancel",
                  "className": "button green outline",
                  "disabled": false,
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": "Cancel",
                "type": "button",
              },
            ],
            "type": "div",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            className="edit-profile_form"
            encType="multipart/form-data"
            onSubmit={[Function]}
          >
            <ProfileImageUploader
              canReset={false}
              imageRead={[Function]}
              name="image"
              profileImage="https://res.cloudinary.com/drmmqcxkc/image/upload/v1541770998/siue0ec27gazjujncvch.jpg"
              resetImage={[Function]}
            />
            <h3
              className="username"
              id="user-name"
            >
              Afeez1 Awoyemi
            </h3>
            <_default
              handleChange={[Function]}
              name="username"
              placeholder="Username"
              value="akangbe"
            />
            <_default
              handleChange={[Function]}
              name="bio"
              placeholder="Enter a short bio"
              value="here's my bio which I love"
            />
            <div>
              <button
                className="button green outline"
                disabled={true}
                id="save-button"
                type="submit"
              >
                Save
              </button>
              <button
                className="button green outline"
                disabled={false}
                onClick={[Function]}
                type="button"
              >
                Cancel
              </button>
            </div>
          </form>,
          <Connect(NotificationSettings) />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ProfileImageUploader
                canReset={false}
                imageRead={[Function]}
                name="image"
                profileImage="https://res.cloudinary.com/drmmqcxkc/image/upload/v1541770998/siue0ec27gazjujncvch.jpg"
                resetImage={[Function]}
              />,
              <h3
                className="username"
                id="user-name"
              >
                Afeez1 Awoyemi
              </h3>,
              <_default
                handleChange={[Function]}
                name="username"
                placeholder="Username"
                value="akangbe"
              />,
              <_default
                handleChange={[Function]}
                name="bio"
                placeholder="Enter a short bio"
                value="here's my bio which I love"
              />,
              <div>
                <button
                  className="button green outline"
                  disabled={true}
                  id="save-button"
                  type="submit"
                >
                  Save
                </button>
                <button
                  className="button green outline"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  Cancel
                </button>
              </div>,
            ],
            "className": "edit-profile_form",
            "encType": "multipart/form-data",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "canReset": false,
                "imageRead": [Function],
                "name": "image",
                "profileImage": "https://res.cloudinary.com/drmmqcxkc/image/upload/v1541770998/siue0ec27gazjujncvch.jpg",
                "resetImage": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Afeez1 Awoyemi",
                "className": "username",
                "id": "user-name",
              },
              "ref": null,
              "rendered": "Afeez1 Awoyemi",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "handleChange": [Function],
                "name": "username",
                "placeholder": "Username",
                "value": "akangbe",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "handleChange": [Function],
                "name": "bio",
                "placeholder": "Enter a short bio",
                "value": "here's my bio which I love",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <button
                    className="button green outline"
                    disabled={true}
                    id="save-button"
                    type="submit"
                  >
                    Save
                  </button>,
                  <button
                    className="button green outline"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    Cancel
                  </button>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Save",
                    "className": "button green outline",
                    "disabled": true,
                    "id": "save-button",
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Save",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Cancel",
                    "className": "button green outline",
                    "disabled": false,
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": "button",
                },
              ],
              "type": "div",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
